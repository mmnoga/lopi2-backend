#H2
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=validate

# http://localhost:8080/h2-console
spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true

# Flyway
spring.flyway.baselineOnMigrate=true
spring.flyway.locations=classpath:db/migration/h2
spring.flyway.enabled=true

logging.level.root=INFO
logging.level.com.liftoff=INFO

jwt.secret=asdsalqrk1232115dfas@!!
jwt.expirationTime=12000000
jwt.RefreshExpirationMs=6000000

server.port=8084
server.error.include-stacktrace=never

# Firebase Firestore configuration
spring.cloud.gcp.firestore.credentials.location=classpath:firebase-key.json
firebase.storage.bucketName=lopi-2-dev.appspot.com
firebase.storage.folderName=images
firebase.storage.maxFileSize=524288
firebase.config.filepath=firebase-key.json

# The maximum allowable file size that can be uploaded
spring.servlet.multipart.max-file-size=4MB

# Cart settings
cart.cookie.name=cartId
cart.cookie.maxAgeSeconds=86400
# Update expired sessions time: every day at 00:00
cart.cookie.updateExpiredSessionsOccurrence=0 0 0 * * *
# Delete expired sessions time: every day at 00:05
cart.cookie.deleteExpiredSessionsOccurrence=0 5 0 * * *

# Swagger
springdoc.swagger-ui.tagsSorter=alpha

server.servlet.context-path=/api

# RabbitMQ
spring.rabbitmq.host=whale.rmq.cloudamqp.com
spring.rabbitmq.port=5672
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD}
spring.rabbitmq.virtual-host=${SPRING_RABBITMQ_USERNAME}

rabbitmq.queue.name=lopi_queue
rabbitmq.exchange.name=lopi_exchange
rabbitmq.routing.key=lopi_routing_key

# User Register
user.register.token.expiration-minutes=20
user.register.queue.name=registration_queue
user.register.exchange.name=registration_exchange
user.register.routing.key=registration_routing_key

# Reset User Password
user.passwordReset.token.expiration-minutes=20
user.passwordReset.queue.name=password_reset_queue
user.passwordReset.exchange.name=password_reset_exchange
user.passwordReset.routing.key=password_reset_key

# Token
token.register.deleteExpiredOccurrence=0 0 0 * * *

# Order Summary Sender
order.summary.queue.name=order_summary_queue
order.summary.exchange.name=order_summary_exchange
order.summary.routing.key=order_summary_key

# PAYU
payu.client-id=${PAYU_CLIENT_ID}
payu.client-secret=${PAYU_CLIENT_SECRET}
payu.merchant-pos-id=${PAYU_MERCHANT_POS_ID}
payu.shop-id=${PAYU_SHOP_ID}
payu.notify-url=${PAYU_NOTIFY_URL}
payu.continue-url=${PAYU_CONTINUE_URL}
payu.language=pl